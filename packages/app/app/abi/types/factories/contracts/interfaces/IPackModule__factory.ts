/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPackModule,
  IPackModuleInterface,
} from "../../../contracts/interfaces/IPackModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "additionalData",
        type: "bytes",
      },
    ],
    name: "onCreate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "additionalData",
        type: "bytes",
      },
    ],
    name: "onOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "additionalData",
        type: "bytes",
      },
    ],
    name: "onRevoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPackModule__factory {
  static readonly abi = _abi;
  static createInterface(): IPackModuleInterface {
    return new Interface(_abi) as IPackModuleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IPackModule {
    return new Contract(address, _abi, runner) as unknown as IPackModule;
  }
}
