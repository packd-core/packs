/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PackNFT, PackNFTInterface } from "../../contracts/PackNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "creationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "packState",
    outputs: [
      {
        internalType: "enum PackNFT.PackState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "packStateURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cea38038062001cea833981016040819052620000349162000242565b8181600062000044838262000362565b50600162000053828262000362565b50600b9150620000669050848262000362565b5060408051808201909152600781526618dc99585d195960ca1b6020808301919091526001600052600d90527ffd54ff1ed53f34a900b24c5ba64f85761163b5d82d98a47b9bd80e45466993c590620000c0908262000362565b506040805180820190915260068152651bdc195b995960d21b6020808301919091526002600052600d90527f10a81eed9d63d16face5e76357905348e6253d3394086026bb2bf2145d7cc2499062000119908262000362565b506040805180820190915260078152661c995d9bdad95960ca1b6020808301919091526003600052600d90527f26b4a10d0f0b04925c23bd4480ee147c916e5e87a7d68206a533dad160ac81e29062000173908262000362565b505050506200042e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a557600080fd5b81516001600160401b0380821115620001c257620001c26200017d565b604051601f8301601f19908116603f01168101908282118183101715620001ed57620001ed6200017d565b816040528381526020925086838588010111156200020a57600080fd5b600091505b838210156200022e57858201830151818301840152908201906200020f565b600093810190920192909252949350505050565b6000806000606084860312156200025857600080fd5b83516001600160401b03808211156200027057600080fd5b6200027e8783880162000193565b945060208601519150808211156200029557600080fd5b620002a38783880162000193565b93506040860151915080821115620002ba57600080fd5b50620002c98682870162000193565b9150509250925092565b600181811c90821680620002e857607f821691505b6020821081036200030957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035d57600081815260208120601f850160051c81016020861015620003385750805b601f850160051c820191505b81811015620003595782815560010162000344565b5050505b505050565b81516001600160401b038111156200037e576200037e6200017d565b62000396816200038f8454620002d3565b846200030f565b602080601f831160018114620003ce5760008415620003b55750858301515b600019600386901b1c1916600185901b17855562000359565b600085815260208120601f198616915b82811015620003ff57888601518255948401946001909101908401620003de565b50858210156200041e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118ac806200043e6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806342842e0e116100cd57806395d89b4111610081578063b88d4fde11610066578063b88d4fde146102d5578063c87b56dd146102e8578063e985e9c5146102fb57600080fd5b806395d89b41146102ba578063a22cb465146102c257600080fd5b80634f6ccce7116100b25780634f6ccce7146102815780636352211e1461029457806370a08231146102a757600080fd5b806342842e0e1461024e5780634f5e74c21461026157600080fd5b806318160ddd1161012457806323b872dd1161010957806323b872dd146101f85780632f745c591461020b5780633664cd3f1461021e57600080fd5b806318160ddd146101d357806322e06ae0146101e557600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc14610193578063095ea7b3146101be575b600080fd5b61016961016436600461148b565b610337565b60405190151581526020015b60405180910390f35b610186610348565b60405161017591906114ff565b6101a66101a1366004611512565b6103da565b6040516001600160a01b039091168152602001610175565b6101d16101cc366004611547565b610401565b005b6008545b604051908152602001610175565b6101866101f3366004611512565b610537565b6101d1610206366004611571565b6105d1565b6101d7610219366004611547565b610648565b61024161022c366004611512565b600c6020526000908152604090205460ff1681565b60405161017591906115c3565b6101d161025c366004611571565b6106f0565b6101d761026f366004611512565b600e6020526000908152604090205481565b6101d761028f366004611512565b61070b565b6101a66102a2366004611512565b6107af565b6101d76102b53660046115eb565b610814565b6101866108ae565b6101d16102d0366004611606565b6108bd565b6101d16102e3366004611658565b6108cc565b6101866102f6366004611512565b61094a565b610169610309366004611734565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061034282610a93565b92915050565b60606000805461035790611767565b80601f016020809104026020016040519081016040528092919081815260200182805461038390611767565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b60006103e582610ad1565b506000908152600460205260409020546001600160a01b031690565b600061040c826107af565b9050806001600160a01b0316836001600160a01b03160361049a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806104b657506104b68133610309565b6105285760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610491565b6105328383610b38565b505050565b600d602052600090815260409020805461055090611767565b80601f016020809104026020016040519081016040528092919081815260200182805461057c90611767565b80156105c95780601f1061059e576101008083540402835291602001916105c9565b820191906000526020600020905b8154815290600101906020018083116105ac57829003601f168201915b505050505081565b6105db3382610bb3565b61063d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610491565b610532838383610c32565b600061065383610814565b82106106c75760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610491565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610532838383604051806020016040528060008152506108cc565b600061071660085490565b821061078a5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610491565b6008828154811061079d5761079d6117a1565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103425760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610491565b60006001600160a01b0382166108925760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610491565b506001600160a01b031660009081526003602052604090205490565b60606001805461035790611767565b6108c8338383610e45565b5050565b6108d63383610bb3565b6109385760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610491565b61094484848484610f13565b50505050565b6000818152600c602052604081205460609160ff90911690600d81836003811115610977576109776115ad565b8152602001908152602001600020805461099090611767565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90611767565b8015610a095780601f106109de57610100808354040283529160200191610a09565b820191906000526020600020905b8154815290600101906020018083116109ec57829003601f168201915b505050505090506000815111610a615760405162461bcd60e51b815260206004820152601860248201527f5061636b644d61696e3a20696e76616c696420737461746500000000000000006044820152606401610491565b610a69610f9c565b81604051602001610a7b9291906117b7565b60405160208183030381529060405292505050919050565b60006001600160e01b031982167f780e9d63000000000000000000000000000000000000000000000000000000001480610342575061034282610fab565b6000818152600260205260409020546001600160a01b0316610b355760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610491565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610b7a826107af565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bbf836107af565b9050806001600160a01b0316846001600160a01b03161480610c0657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c2a5750836001600160a01b0316610c1f846103da565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c45826107af565b6001600160a01b031614610ca95760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610491565b6001600160a01b038216610d245760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610491565b610d318383836001611046565b826001600160a01b0316610d44826107af565b6001600160a01b031614610da85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610491565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610ea65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610491565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f1e848484610c32565b610f2a84848484611052565b6109445760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610491565b6060600b805461035790611767565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061100e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061034257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610342565b610944848484846111a9565b60006001600160a01b0384163b1561119e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110969033908990889088906004016117e6565b6020604051808303816000875af19250505080156110d1575060408051601f3d908101601f191682019092526110ce91810190611822565b60015b611184573d8080156110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b50805160000361117c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610491565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c2a565b506001949350505050565b60018111156112205760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f7274656400000000000000000000006064820152608401610491565b816001600160a01b03851661127c5761127781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61129f565b836001600160a01b0316856001600160a01b03161461129f5761129f85826112e5565b6001600160a01b0384166112bb576112b681611382565b6112de565b846001600160a01b0316846001600160a01b0316146112de576112de8482611431565b5050505050565b600060016112f284610814565b6112fc919061183f565b60008381526007602052604090205490915080821461134f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906113949060019061183f565b600083815260096020526040812054600880549394509092849081106113bc576113bc6117a1565b9060005260206000200154905080600883815481106113dd576113dd6117a1565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061141557611415611860565b6001900381819060005260206000200160009055905550505050565b600061143c83610814565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610b3557600080fd5b60006020828403121561149d57600080fd5b81356114a881611475565b9392505050565b60005b838110156114ca5781810151838201526020016114b2565b50506000910152565b600081518084526114eb8160208601602086016114af565b601f01601f19169290920160200192915050565b6020815260006114a860208301846114d3565b60006020828403121561152457600080fd5b5035919050565b80356001600160a01b038116811461154257600080fd5b919050565b6000806040838503121561155a57600080fd5b6115638361152b565b946020939093013593505050565b60008060006060848603121561158657600080fd5b61158f8461152b565b925061159d6020850161152b565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b60208101600483106115e557634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156115fd57600080fd5b6114a88261152b565b6000806040838503121561161957600080fd5b6116228361152b565b91506020830135801515811461163757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561166e57600080fd5b6116778561152b565b93506116856020860161152b565b925060408501359150606085013567ffffffffffffffff808211156116a957600080fd5b818701915087601f8301126116bd57600080fd5b8135818111156116cf576116cf611642565b604051601f8201601f19908116603f011681019083821181831017156116f7576116f7611642565b816040528281528a602084870101111561171057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561174757600080fd5b6117508361152b565b915061175e6020840161152b565b90509250929050565b600181811c9082168061177b57607f821691505b60208210810361179b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516117c98184602088016114af565b8351908301906117dd8183602088016114af565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261181860808301846114d3565b9695505050505050565b60006020828403121561183457600080fd5b81516114a881611475565b8181038181111561034257634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212205ffb1ef919d6bb6438be1005935ea058b4af3db6a53638a0997767b381719f8864736f6c63430008140033";

type PackNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PackNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PackNFT__factory extends ContractFactory {
  constructor(...args: PackNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseTokenURI_: string,
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      baseTokenURI_,
      name_,
      symbol_,
      overrides || {}
    );
  }
  override deploy(
    baseTokenURI_: string,
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      baseTokenURI_,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<
      PackNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PackNFT__factory {
    return super.connect(runner) as PackNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PackNFTInterface {
    return new Interface(_abi) as PackNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PackNFT {
    return new Contract(address, _abi, runner) as unknown as PackNFT;
  }
}
